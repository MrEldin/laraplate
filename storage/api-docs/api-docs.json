{
    "swagger": "2.0",
    "info": {
        "title": "SMATRLYJOBS API DOCUMENTATION",
        "version": "1.0.0"
    },
    "basePath": "/api",
    "paths": {
        "/api/login": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "User authorization",
                "description": "Authorize a user",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "auth",
                        "in": "body",
                        "description": "User that should be authorization",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/UserLoginRequestV1"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 OK",
                        "schema": {
                            "properties": {
                                "token": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "210": {
                        "description": "210 Two way authorization requested",
                        "schema": {
                            "properties": {
                                "hash": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/UnauthorizedErrorResponseV1"
                        }
                    },
                    "422": {
                        "description": "422 Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponseV1"
                        }
                    },
                    "500": {
                        "description": "500 Server Error"
                    }
                }
            }
        },
        "/api/me": {
            "get": {
                "tags": [
                    "auth"
                ],
                "summary": "Authorizated user",
                "description": "User that is logged in",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "200 OK",
                        "schema": {
                            "properties": {
                                "token": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "210": {
                        "description": "210 Two way authorization requested",
                        "schema": {
                            "properties": {
                                "hash": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/UnauthorizedErrorResponseV1"
                        }
                    },
                    "422": {
                        "description": "422 Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponseV1"
                        }
                    },
                    "500": {
                        "description": "500 Server Error"
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "Logout user",
                "description": "Deactivate jwt token",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "200 OK",
                        "schema": {
                            "properties": {
                                "token": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "210": {
                        "description": "210 Two way authorization requested",
                        "schema": {
                            "properties": {
                                "hash": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/UnauthorizedErrorResponseV1"
                        }
                    },
                    "422": {
                        "description": "422 Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponseV1"
                        }
                    },
                    "500": {
                        "description": "500 Server Error"
                    }
                }
            }
        },
        "/api/refresh": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "Refresh token",
                "description": "Refresh jwt token",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "200 OK",
                        "schema": {
                            "properties": {
                                "token": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "210": {
                        "description": "210 Two way authorization requested",
                        "schema": {
                            "properties": {
                                "hash": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/UnauthorizedErrorResponseV1"
                        }
                    },
                    "422": {
                        "description": "422 Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponseV1"
                        }
                    },
                    "500": {
                        "description": "500 Server Error"
                    }
                }
            }
        },
        "/api/organisations/{id}": {
            "get": {
                "tags": [
                    "organisations"
                ],
                "summary": "Get one organisation by id",
                "description": "Get one organisation by id\n    <br> **permission:** _view-organisation_",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "200 OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/OrganisationTransformerV1"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request"
                    },
                    "500": {
                        "description": "500 Internal Server Error"
                    }
                },
                "security": [
                    {
                        "jwt": [
                            "agency-admin"
                        ]
                    }
                ]
            }
        },
        "/api/organisations": {
            "get": {
                "tags": [
                    "organisations"
                ],
                "summary": "Get all organisations",
                "description": "Return all organisations\n    <br> **permission:** _view-organisation_",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "200 OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/OrganisationTransformerV1"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request"
                    },
                    "500": {
                        "description": "500 Internal Server Error"
                    }
                },
                "security": [
                    {
                        "jwt": [
                            "agency-admin"
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "organisations"
                ],
                "summary": "Update organisation",
                "description": "Update organisation",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "auth",
                        "in": "body",
                        "description": "User that should be authorization",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/UserLoginRequestV1"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 OK",
                        "schema": {
                            "properties": {
                                "token": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "210": {
                        "description": "210 Two way authorization requested",
                        "schema": {
                            "properties": {
                                "hash": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/UnauthorizedErrorResponseV1"
                        }
                    },
                    "422": {
                        "description": "422 Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponseV1"
                        }
                    },
                    "500": {
                        "description": "500 Server Error"
                    }
                }
            },
            "post": {
                "tags": [
                    "organisations"
                ],
                "summary": "Create organisation",
                "description": "Create organisation",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "auth",
                        "in": "body",
                        "description": "User that should be authorization",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrganisationCreateRequestV1"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 OK",
                        "schema": {
                            "properties": {
                                "token": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "210": {
                        "description": "210 Two way authorization requested",
                        "schema": {
                            "properties": {
                                "hash": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/UnauthorizedErrorResponseV1"
                        }
                    },
                    "422": {
                        "description": "422 Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponseV1"
                        }
                    },
                    "500": {
                        "description": "500 Server Error"
                    }
                }
            }
        },
        "/api/organisations/phases": {
            "get": {
                "tags": [
                    "organisation-phase"
                ],
                "summary": "Get all organisation phases",
                "description": "Return all organisation phases\n    <br> **permission:** _view-organisation_",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "200 OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/PhaseTransformerV1"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request"
                    },
                    "500": {
                        "description": "500 Internal Server Error"
                    }
                },
                "security": [
                    {
                        "jwt": [
                            "agency-admin"
                        ]
                    }
                ]
            }
        },
        "/api/organisations/phases/{id}": {
            "put": {
                "tags": [
                    "organisation-phase"
                ],
                "summary": "Update organisation",
                "description": "Update organisation phases",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "auth",
                        "in": "body",
                        "description": "User that should be authorization",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrganisationPhaseAttachRequestV1"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 OK",
                        "schema": {
                            "properties": {
                                "token": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "210": {
                        "description": "210 Two way authorization requested",
                        "schema": {
                            "properties": {
                                "hash": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/UnauthorizedErrorResponseV1"
                        }
                    },
                    "422": {
                        "description": "422 Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponseV1"
                        }
                    },
                    "500": {
                        "description": "500 Server Error"
                    }
                }
            }
        },
        "/api/organisations/phases/detach/{id}": {
            "put": {
                "tags": [
                    "organisation-phase"
                ],
                "summary": "Update organisation",
                "description": "Update organisation phases",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "auth",
                        "in": "body",
                        "description": "User that should be authorization",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrganisationPhaseAttachRequestV1"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 OK",
                        "schema": {
                            "properties": {
                                "token": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "210": {
                        "description": "210 Two way authorization requested",
                        "schema": {
                            "properties": {
                                "hash": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/UnauthorizedErrorResponseV1"
                        }
                    },
                    "422": {
                        "description": "422 Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponseV1"
                        }
                    },
                    "500": {
                        "description": "500 Server Error"
                    }
                }
            }
        },
        "/api/organisations/phases/sync/{id}": {
            "put": {
                "tags": [
                    "organisation-phase"
                ],
                "summary": "Update organisation",
                "description": "Update organisation phases",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "auth",
                        "in": "body",
                        "description": "User that should be authorization",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrganisationPhaseSyncRequestV1"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 OK",
                        "schema": {
                            "properties": {
                                "token": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "210": {
                        "description": "210 Two way authorization requested",
                        "schema": {
                            "properties": {
                                "hash": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/UnauthorizedErrorResponseV1"
                        }
                    },
                    "422": {
                        "description": "422 Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponseV1"
                        }
                    },
                    "500": {
                        "description": "500 Server Error"
                    }
                }
            }
        },
        "/api/organisations/users/{id}": {
            "get": {
                "tags": [
                    "organisation-user"
                ],
                "summary": "Get all organisation users",
                "description": "Return all organisation users\n    <br> **permission:** _view-organisation_",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "200 OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/UserTransformerV1"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request"
                    },
                    "500": {
                        "description": "500 Internal Server Error"
                    }
                },
                "security": [
                    {
                        "jwt": [
                            "agency-admin"
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "organisation-user"
                ],
                "summary": "Create user for organisation",
                "description": "Create user for organisation",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "auth",
                        "in": "body",
                        "description": "User that should be authorization",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/UserCreateRequestV1"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/UserTransformerV1"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "210": {
                        "description": "210 Two way authorization requested",
                        "schema": {
                            "properties": {
                                "hash": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/UnauthorizedErrorResponseV1"
                        }
                    },
                    "422": {
                        "description": "422 Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponseV1"
                        }
                    },
                    "500": {
                        "description": "500 Server Error"
                    }
                }
            }
        },
        "/api/phases/{id}": {
            "get": {
                "tags": [
                    "phases"
                ],
                "summary": "Get phase",
                "description": "Get phase\n    <br> **permission:** _view-phases_",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "200 OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/PhaseTransformerV1"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request"
                    },
                    "500": {
                        "description": "500 Internal Server Error"
                    }
                },
                "security": [
                    {
                        "jwt": [
                            "agency-admin"
                        ]
                    }
                ]
            }
        },
        "/api/phases": {
            "get": {
                "tags": [
                    "phases"
                ],
                "summary": "Get all phases",
                "description": "Return all phases\n    <br> **permission:** _view-phase_",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "200 OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/PhaseTransformerV1"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request"
                    },
                    "500": {
                        "description": "500 Internal Server Error"
                    }
                },
                "security": [
                    {
                        "jwt": [
                            "agency-admin"
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "phases"
                ],
                "summary": "Update phase",
                "description": "Update phase",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "auth",
                        "in": "body",
                        "description": "User that should be authorization",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/UserLoginRequestV1"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 OK",
                        "schema": {
                            "properties": {
                                "token": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "210": {
                        "description": "210 Two way authorization requested",
                        "schema": {
                            "properties": {
                                "hash": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/UnauthorizedErrorResponseV1"
                        }
                    },
                    "422": {
                        "description": "422 Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponseV1"
                        }
                    },
                    "500": {
                        "description": "500 Server Error"
                    }
                }
            },
            "post": {
                "tags": [
                    "phases"
                ],
                "summary": "Create phase",
                "description": "Create phase",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "auth",
                        "in": "body",
                        "description": "User that should be authorization",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/PhaseCreateRequestV1"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 OK",
                        "schema": {
                            "properties": {
                                "token": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "210": {
                        "description": "210 Two way authorization requested",
                        "schema": {
                            "properties": {
                                "hash": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/UnauthorizedErrorResponseV1"
                        }
                    },
                    "422": {
                        "description": "422 Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponseV1"
                        }
                    },
                    "500": {
                        "description": "500 Server Error"
                    }
                }
            }
        },
        "/api/users/{id}": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "Get one user by id",
                "description": "Get one user by id\n    <br> **permission:** _view-users_",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "200 OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/UserTransformerV1"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request"
                    },
                    "500": {
                        "description": "500 Internal Server Error"
                    }
                },
                "security": [
                    {
                        "jwt": [
                            "agency-admin"
                        ]
                    }
                ]
            }
        },
        "/api/users": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "Get all users",
                "description": "Return all users\n    <br> **permission:** _view-users_",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "200 OK",
                        "schema": {
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/UserTransformerV1"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "400 Bad Request"
                    },
                    "500": {
                        "description": "500 Internal Server Error"
                    }
                },
                "security": [
                    {
                        "jwt": [
                            "agency-admin"
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "users"
                ],
                "summary": "Update user",
                "description": "Update user",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "auth",
                        "in": "body",
                        "description": "User that should be authorization",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/UserLoginRequestV1"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 OK",
                        "schema": {
                            "properties": {
                                "token": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "210": {
                        "description": "210 Two way authorization requested",
                        "schema": {
                            "properties": {
                                "hash": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/UnauthorizedErrorResponseV1"
                        }
                    },
                    "422": {
                        "description": "422 Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponseV1"
                        }
                    },
                    "500": {
                        "description": "500 Server Error"
                    }
                }
            },
            "post": {
                "tags": [
                    "users"
                ],
                "summary": "Create user",
                "description": "Create user",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "auth",
                        "in": "body",
                        "description": "User that should be authorization",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/UserLoginRequestV1"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200 OK",
                        "schema": {
                            "properties": {
                                "token": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "210": {
                        "description": "210 Two way authorization requested",
                        "schema": {
                            "properties": {
                                "hash": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "401 Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/UnauthorizedErrorResponseV1"
                        }
                    },
                    "422": {
                        "description": "422 Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorResponseV1"
                        }
                    },
                    "500": {
                        "description": "500 Server Error"
                    }
                }
            }
        }
    },
    "definitions": {
        "OrganisationCreateRequestV1": {
            "required": [
                "first_name",
                "last_name",
                "email",
                "password"
            ],
            "properties": {
                "name": {
                    "description": "name",
                    "type": "string",
                    "example": "John"
                },
                "registered_name": {
                    "description": "registered name",
                    "type": "string",
                    "example": "12343233"
                },
                "address": {
                    "description": "address",
                    "type": "string",
                    "example": "Berlin 234"
                },
                "postal_code": {
                    "description": "postal code",
                    "type": "string",
                    "example": "110000"
                },
                "town": {
                    "description": "town",
                    "type": "string",
                    "example": "Berlin"
                },
                "email": {
                    "description": "email",
                    "type": "string",
                    "example": "john@doe.com"
                },
                "phone": {
                    "description": "phone",
                    "type": "string",
                    "example": "043/2213-23-44"
                }
            }
        },
        "OrganisationPhaseAttachRequestV1": {
            "required": [
                "phase_id"
            ],
            "properties": {
                "phase_id": {
                    "description": "first name",
                    "type": "string",
                    "example": "1"
                }
            }
        },
        "OrganisationPhaseSyncRequestV1": {
            "required": [
                "phases"
            ],
            "properties": {
                "phases": {
                    "description": "phases",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ArrayWithIdV1"
                    }
                }
            }
        },
        "PhaseCreateRequestV1": {
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "description": "name",
                    "type": "string",
                    "example": "John"
                }
            }
        },
        "UserCreateRequestV1": {
            "required": [
                "first_name",
                "last_name",
                "email",
                "password"
            ],
            "properties": {
                "first_name": {
                    "description": "first name",
                    "type": "string",
                    "example": "John"
                },
                "last_name": {
                    "description": "last name",
                    "type": "string",
                    "example": "Doe"
                },
                "email": {
                    "description": "email",
                    "type": "string",
                    "example": "john@example.com"
                },
                "password": {
                    "description": "password",
                    "type": "string",
                    "example": "password"
                }
            }
        },
        "UserLoginRequestV1": {
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "description": "email address",
                    "type": "string",
                    "example": "admin@chord.agency"
                },
                "password": {
                    "description": "password",
                    "type": "string",
                    "example": "password"
                },
                "device_token": {
                    "description": "device token",
                    "type": "string"
                },
                "device_type": {
                    "description": "device type",
                    "type": "string"
                },
                "two_way_token": {
                    "description": "Already saved two way auth token (save this device token)",
                    "type": "string"
                }
            }
        },
        "OrganisationTransformerV1": {
            "required": [],
            "properties": {
                "id": {
                    "description": "id",
                    "type": "integer"
                },
                "name": {
                    "description": "name",
                    "type": "string"
                },
                "registeredName": {
                    "description": "registeredName",
                    "type": "string"
                },
                "address": {
                    "description": "address",
                    "type": "string"
                },
                "postalCode": {
                    "description": "postalCode",
                    "type": "string"
                },
                "town": {
                    "description": "town",
                    "type": "string"
                },
                "email": {
                    "description": "email",
                    "type": "string"
                }
            }
        },
        "PhaseTransformerV1": {
            "required": [],
            "properties": {
                "id": {
                    "description": "id",
                    "type": "integer"
                },
                "name": {
                    "description": "name",
                    "type": "string"
                }
            }
        },
        "UserTransformerV1": {
            "required": [],
            "properties": {
                "id": {
                    "description": "id",
                    "type": "integer"
                },
                "name": {
                    "description": "name",
                    "type": "string"
                },
                "registeredName": {
                    "description": "registeredName",
                    "type": "string"
                },
                "address": {
                    "description": "address",
                    "type": "string"
                },
                "postalCode": {
                    "description": "postalCode",
                    "type": "string"
                },
                "town": {
                    "description": "town",
                    "type": "string"
                },
                "email": {
                    "description": "email",
                    "type": "string"
                }
            }
        },
        "EmptyResponseV1": {
            "required": [
                "message, errors, status_code, data"
            ],
            "properties": {
                "message": {
                    "description": "error message",
                    "type": "string"
                },
                "errors": {
                    "description": "array with detailed errors",
                    "type": "object"
                },
                "status_code": {
                    "description": "http status code",
                    "type": "integer"
                },
                "data": {
                    "description": "response data",
                    "type": "object"
                }
            },
            "type": "object"
        },
        "ValidationErrorResponseV1": {
            "required": [
                "message, errors, status_code, data"
            ],
            "properties": {
                "message": {
                    "description": "error message",
                    "type": "string"
                },
                "errors": {
                    "description": "array with detailed errors",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ErrorsObjectV1"
                    }
                },
                "status_code": {
                    "description": "http status code",
                    "type": "integer"
                },
                "data": {
                    "description": "response data",
                    "type": "object"
                }
            },
            "type": "object"
        },
        "ErrorsObjectV1": {
            "required": [
                "field_name"
            ],
            "properties": {
                "field_name": {
                    "description": "field name",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ErrorsArrayV1"
                    }
                }
            }
        },
        "ErrorsArrayV1": {
            "required": [
                "error"
            ],
            "type": "string"
        },
        "UnauthorizedErrorResponseV1": {
            "required": [
                "message, errors, status_code, data"
            ],
            "properties": {
                "message": {
                    "description": "error message",
                    "type": "string",
                    "example": "Unauthorized"
                },
                "errors": {
                    "description": "array with detailed errors",
                    "properties": {
                        "error": {
                            "description": "array with detailed errors",
                            "type": "string",
                            "example": "Unauthorized"
                        }
                    },
                    "type": "object"
                },
                "status_code": {
                    "description": "http status code",
                    "type": "integer",
                    "example": "401"
                },
                "data": {
                    "description": "response data",
                    "type": "object"
                }
            },
            "type": "object"
        },
        "BadRequestErrorResponseV1": {
            "required": [
                "message, errors, status_code, data"
            ],
            "properties": {
                "message": {
                    "description": "error message",
                    "type": "string",
                    "example": "Bad Request"
                },
                "errors": {
                    "description": "array with detailed errors",
                    "properties": {
                        "error": {
                            "description": "array with detailed errors",
                            "type": "string",
                            "example": "Bad Request"
                        }
                    },
                    "type": "object"
                },
                "status_code": {
                    "description": "http status code",
                    "type": "integer",
                    "example": "400"
                },
                "data": {
                    "description": "response data",
                    "type": "object"
                }
            },
            "type": "object"
        },
        "ForbiddenErrorResponseV1": {
            "required": [
                "message, errors, status_code, data"
            ],
            "properties": {
                "message": {
                    "description": "error message",
                    "type": "string",
                    "example": "Forbidden"
                },
                "errors": {
                    "description": "array with detailed errors",
                    "properties": {
                        "error": {
                            "description": "array with detailed errors",
                            "type": "string",
                            "example": "Forbidden"
                        }
                    },
                    "type": "object"
                },
                "status_code": {
                    "description": "http status code",
                    "type": "integer",
                    "example": "403"
                },
                "data": {
                    "description": "response data",
                    "type": "object"
                }
            },
            "type": "object"
        },
        "NotFoundErrorResponseV1": {
            "required": [
                "message, errors, status_code, data"
            ],
            "properties": {
                "message": {
                    "description": "error message",
                    "type": "string",
                    "example": "Not Found"
                },
                "errors": {
                    "description": "array with detailed errors",
                    "properties": {
                        "error": {
                            "description": "array with detailed errors",
                            "type": "string",
                            "example": "Not Found"
                        }
                    },
                    "type": "object"
                },
                "status_code": {
                    "description": "http status code",
                    "type": "integer",
                    "example": "404"
                },
                "data": {
                    "description": "response data",
                    "type": "object"
                }
            },
            "type": "object"
        },
        "NotAllowedErrorResponseV1": {
            "required": [
                "message, errors, status_code, data"
            ],
            "properties": {
                "message": {
                    "description": "error message",
                    "type": "string",
                    "example": "Method Not Allowed"
                },
                "errors": {
                    "description": "array with detailed errors",
                    "properties": {
                        "error": {
                            "description": "array with detailed errors",
                            "type": "string",
                            "example": "Method Not Allowed"
                        }
                    },
                    "type": "object"
                },
                "status_code": {
                    "description": "http status code",
                    "type": "integer",
                    "example": "405"
                },
                "data": {
                    "description": "response data",
                    "type": "object"
                }
            },
            "type": "object"
        },
        "ArrayWithIdV1": {
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "description": "object id",
                    "type": "integer"
                }
            }
        },
        "CreateJobRequestJobsArrayV1": {
            "required": [
                "id"
            ],
            "properties": {
                "client_id": {
                    "description": "client id",
                    "type": "integer"
                },
                "user_id": {
                    "description": "user id",
                    "type": "integer"
                },
                "start_time": {
                    "description": "start time",
                    "type": "string",
                    "format": "date"
                },
                "end_time": {
                    "description": "end time",
                    "type": "string",
                    "format": "date"
                },
                "break_minutes": {
                    "description": "break minutes",
                    "type": "integer"
                },
                "number_of_temps": {
                    "description": "number of temps",
                    "type": "integer"
                },
                "rate": {
                    "description": "ratee",
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "SearchTempsJobsArrayV1": {
            "required": [
                "id"
            ],
            "properties": {
                "client_id": {
                    "description": "client id",
                    "type": "integer"
                },
                "start_time": {
                    "description": "start time",
                    "type": "string",
                    "format": "date"
                },
                "end_time": {
                    "description": "end time",
                    "type": "string",
                    "format": "date"
                }
            }
        },
        "ArrayV1": {
            "type": "string"
        },
        "JobTypesArrayV1": {
            "required": [
                "id",
                "grade_id"
            ],
            "properties": {
                "id": {
                    "description": "job type id",
                    "type": "integer"
                },
                "grade_id": {
                    "description": "grade id",
                    "type": "integer"
                }
            }
        },
        "DatesArrayV1": {
            "required": [
                "date"
            ],
            "properties": {
                "date": {
                    "description": "date",
                    "type": "string"
                }
            }
        },
        "SegmentsArrayV1": {
            "required": [
                "name",
                "from",
                "to"
            ],
            "properties": {
                "name": {
                    "description": "segment name",
                    "type": "string"
                },
                "from": {
                    "description": "from",
                    "type": "time"
                },
                "to": {
                    "description": "to",
                    "type": "time"
                },
                "inherit_id": {
                    "description": "segment inherit id",
                    "type": "integer"
                }
            }
        },
        "SegmentsUpdateArrayV1": {
            "required": [
                "name",
                "from",
                "to",
                "id"
            ],
            "properties": {
                "name": {
                    "description": "segment name",
                    "type": "string"
                },
                "from": {
                    "description": "from",
                    "type": "time"
                },
                "to": {
                    "description": "to",
                    "type": "time"
                },
                "id": {
                    "description": "id",
                    "type": "integer"
                },
                "inherit_id": {
                    "description": "segment inherit id",
                    "type": "integer"
                }
            }
        },
        "SegmentsUpdateNamesArrayV1": {
            "required": [
                "name",
                "id"
            ],
            "properties": {
                "name": {
                    "description": "segment name",
                    "type": "string"
                },
                "id": {
                    "description": "id",
                    "type": "integer"
                }
            }
        },
        "CarbonObjectV1": {
            "properties": {
                "date": {
                    "description": "date time",
                    "type": "string"
                },
                "timezone_type": {
                    "description": "timezone type",
                    "type": "integer"
                },
                "timezone": {
                    "description": "timezone",
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "jwt": {
            "type": "apiKey",
            "description": "add jwt token with Bearer ",
            "name": "Authorization",
            "in": "header",
            "flow": "implicit",
            "authorizationUrl": "/auth/login",
            "scopes": {
                "all": "full access with token."
            }
        }
    }
}